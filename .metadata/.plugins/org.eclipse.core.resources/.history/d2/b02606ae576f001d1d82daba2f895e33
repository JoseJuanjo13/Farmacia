package controller;

import java.time.LocalDate;

import modelo.Ciudad;
import modelo.Cliente;
import modelo.DescuentoInteres;
import modelo.DetalleFactura;
import modelo.Farmacia;
import modelo.Presentacion;
import modelo.Producto;
import modelo.Proveedor;
import modelo.Sucursal;
import modelo.TipoProveedor;
import persistencia.Persistencia;

public class ModelFactoryController implements Runnable {

	Farmacia farmacia;
	Persistencia persistencia;

	//-------------------------Singleton---------------------------------------------------
	//Clase estatica oculta. Tan solo se instanciara el singleton una vez
	private static class SingletonHolder{
		//El constructor de Singleton puede ser llamado desde aqui al ser protected
		private final static ModelFactoryController eINSTANCE = new ModelFactoryController();
	}

	//Metodo para obtener la instancia de nuestra clase
	public static ModelFactoryController getInstance() {
		return SingletonHolder.eINSTANCE;
	}

	public ModelFactoryController() {
		System.out.println("invocacion clase singleton");
		inicializarDatos();
	}

	private void inicializarDatos() {
		// TODO Auto-generated method stub
		farmacia = new Farmacia();

		Persistencia.cargarDatosDescInte(farmacia);
		Persistencia.cargarDatosPresen(farmacia);
		Persistencia.cargarDatosTipoProv(farmacia);
		Persistencia.cargarDatosCiudad(farmacia);
		Persistencia.cargarProductos(farmacia);
		Persistencia.cargarDatosCliente(farmacia);
		Persistencia.cargarDatosProveedor(farmacia);
		Persistencia.cargarDatosSucursal(farmacia);
	}

	public Farmacia getFarmacia() {
		return farmacia;
	}

	public void setFarmacia(Farmacia farmacia) {
		this.farmacia = farmacia;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub

	}

	public Producto crearProducto(String idProducto, String nombre, String precio, String cantidad, LocalDate fechaVencimiento,
			String descInte, String presentacion) {

		Producto producto = farmacia.agregarProducto(idProducto, nombre, precio, cantidad, fechaVencimiento, descInte, presentacion);

		DescuentoInteres descinte_ = farmacia.obtenerDescInte(descInte);
		Presentacion presenta_ = farmacia.obtenerPresen(presentacion);
		double precio_ = Double.valueOf(precio);
		int cantidad_ = Integer.valueOf(cantidad);

		Persistencia.guardarProducto(idProducto, nombre, precio_, cantidad_, fechaVencimiento, descinte_, presenta_);


		return producto;
	}

	public boolean eliminarProducto(String idProducto) {

		if (farmacia.eliminarProducto(idProducto)) {
			Persistencia.eliminarProducto(idProducto);
			return true;
		}

		return false;
	}

	public void actualizarProducto(String idProducto, String nombre, String precio, String cantidad,
			LocalDate fechaVencimiento, String descInte, String presentacion, String idP) throws Exception {

		farmacia.actualizarProducto(idProducto, nombre, precio, cantidad, fechaVencimiento, descInte, presentacion, idP);

		DescuentoInteres descinte_ = farmacia.obtenerDescInte(descInte);
		Presentacion presenta_ = farmacia.obtenerPresen(presentacion);
		double precio_ = Double.valueOf(precio);
		int cantidad_ = Integer.valueOf(cantidad);

		Persistencia.actualizarProducto(idProducto, nombre, precio_, cantidad_, fechaVencimiento, descinte_, presenta_, idP);

	}

	public Cliente crearCliente(String cedula, String nombre, String apellido, String direccion, String telefono, String email,
			String ciudad, String depto) {

		Cliente cliente = farmacia.agregarCliente(cedula, nombre, apellido, direccion, telefono, email, ciudad, depto);
		Persistencia.guardarCliente(cedula, nombre, apellido, direccion, telefono, email, ciudad, depto);

		return cliente;

	}

	public boolean eliminarCliente(String cedula) {
		if (farmacia.eliminarCliente(cedula)) {
			Persistencia.eliminarCliente(cedula);
			return true;
		}

		return false;
	}

	public void actualizarCliente(String cedula, String nombre, String apellido, String direccion, String telefono,
			String email, String ciudad, String depto, String cedu) throws Exception{

		farmacia.actualizarCliente(cedula, nombre, apellido, direccion, telefono, email, ciudad, depto, cedu);

		Persistencia.actualizarCliente(cedula, nombre, apellido, direccion, telefono, email, ciudad, depto, cedu);
	}

	public Proveedor crearProveedor(String nit, String nombreProveedor, String tipoProveedor) {
		// TODO Auto-generated method stub
		Proveedor proveedor = farmacia.agregarProveedor(nit, nombreProveedor, tipoProveedor);

		TipoProveedor tipoProveedor_ = farmacia.obtenerTipoProveedor(tipoProveedor);

		Persistencia.guardarProveedor(nit, nombreProveedor, tipoProveedor_);

		return proveedor;
	}

	public boolean eliminarProveedor(String nit) {
		if (farmacia.eliminarProveedor(nit)) {
			Persistencia.eliminarProveedor(nit);
			return true;
		}

		return false;
	}

	public void actualizarProveedor(String nit, String nombreProveedor, String tipoProveedor, String nitA) {

		farmacia.actualizarProveedor(nit, nombreProveedor, tipoProveedor, nitA);

		TipoProveedor tipoProv = farmacia.obtenerTipoProveedor(tipoProveedor);

		Persistencia.actualizarProveedor(nit, nombreProveedor, tipoProv, nitA);

	}

	public Sucursal crearSucursal(String nombre, String telefono, String nit, String ciudad) {

		Proveedor proveedor = farmacia.obtenerProveedor(nit);
		Ciudad ciudad_ = farmacia.obtenerCiudad2(ciudad);


		Sucursal sucursal = farmacia.agregarSucursal(nombre, telefono, proveedor, ciudad_);

		Persistencia.guardarSucursal(nombre, telefono, proveedor, ciudad_);

		return sucursal;
	}

	public void actualizarSucursal(String nombre, String telefono, String nit, String ciudad, String nombre_) {

		Proveedor proveedor = farmacia.obtenerProveedor(nit);
		Ciudad ciudad_ = farmacia.obtenerCiudad2(ciudad);

		farmacia.actualizarSucursal(nombre, telefono, proveedor, ciudad_, nombre_);

		Persistencia.actualizarSucursal(nombre, telefono, proveedor, ciudad_, nombre_);

	}

	public void anadirDetalle(DetalleFactura detalleFactura){
		farmacia.anadirDetalle(detalleFactura);
	}

	public boolean eliminarSucursal(String nombre) {

		if (farmacia.eliminarSucursal(nombre)) {
			Persistencia.eliminarSucursal(nombre);
			return true;
		}

		return false;
	}



}
